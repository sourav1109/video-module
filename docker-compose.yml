version: '3.8'

services:
  # Frontend
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    ports:
      - "3000:3000"
    environment:
      - REACT_APP_API_URL=http://localhost:5000
      - REACT_APP_SOCKET_URL=http://localhost:5000
    volumes:
      - ./frontend:/app
      - /app/node_modules
    depends_on:
      - backend

  # Backend
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    ports:
      - "5000:5000"
      - "10000-11000:10000-11000/udp"  # Mediasoup RTC ports (1000 ports for 300+ students)
    environment:
      - NODE_ENV=development
      - PORT=5000
      - FRONTEND_URL=http://localhost:3000
      - MEDIASOUP_ANNOUNCED_IP=127.0.0.1
      - MEDIASOUP_MIN_PORT=10000
      - MEDIASOUP_MAX_PORT=11000
      - JWT_SECRET=dev-secret-key
      - REDIS_URL=redis://redis:6379
    volumes:
      - ./backend:/app
      - /app/node_modules
      - ./backend/uploads:/app/uploads
    depends_on:
      - redis

  # Redis (for scaling Socket.IO)
  redis:
    image: redis:7-alpine
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    command: redis-server --appendonly yes

  # Optional: MongoDB (if you need a database)
  mongodb:
    image: mongo:6
    ports:
      - "27017:27017"
    environment:
      - MONGO_INITDB_ROOT_USERNAME=admin
      - MONGO_INITDB_ROOT_PASSWORD=password
      - MONGO_INITDB_DATABASE=videocall
    volumes:
      - mongodb_data:/data/db

volumes:
  redis_data:
  mongodb_data:

networks:
  default:
    name: videocall-network